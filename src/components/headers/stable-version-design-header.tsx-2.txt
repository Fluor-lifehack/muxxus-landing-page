"use client";

import { useState, useEffect } from "react";
import Logo from "@/components/elements/logo/Logo";
import GetStartedModal from "@/components/modals/GetStartedModal";
import Link from "next/link";
import {
  ChevronDown,
  Menu,
  X,
  Globe,
  Building2,
  CreditCard,
  Zap,
  Shield,
  Users,
  ArrowRight,
} from "lucide-react";

const MuxxusHeader = () => {
  // States
  const [isScrolled, setIsScrolled] = useState(false);
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);
  const [activeDropdown, setActiveDropdown] = useState<string | null>(null);
  const [isModalOpen, setIsModalOpen] = useState(false);

  // Scroll effect
  useEffect(() => {
    const handleScroll = () => {
      setIsScrolled(window.scrollY > 10);
    };
    window.addEventListener("scroll", handleScroll);
    return () => window.removeEventListener("scroll", handleScroll);
  }, []);

  // Navigation data
  const navigationItems = [
    {
      name: "Products",
      hasDropdown: true,
      items: [
        {
          title: "Business Accounts",
          description: "Multi-currency accounts for global business",
          href: "/business-accounts",
          icon: Building2,
          features: ["Global Accounts", "FX & Transfers", "Multi-currency"],
        },
        {
          title: "Spend Management",
          description: "Corporate cards and expense management",
          href: "/spend",
          icon: CreditCard,
          features: ["Corporate Cards", "Expense Management", "Bill Pay"],
        },
        {
          title: "Payments",
          description: "Accept payments globally with ease",
          href: "/payments",
          icon: Zap,
          features: ["Checkout", "Payment Links", "Plugins"],
        },
      ],
    },
    {
      name: "Solutions",
      hasDropdown: true,
      items: [
        {
          title: "E-commerce",
          description: "Built for online businesses",
          href: "/solutions/ecommerce",
          icon: Users,
          features: ["Marketplaces", "Retail", "Digital Creators"],
        },
        {
          title: "Fintech",
          description: "Financial services innovation",
          href: "/solutions/fintech",
          icon: Shield,
          features: ["Banking as a Service", "Embedded Finance"],
        },
      ],
    },
    { name: "Developers", href: "/developers" },
    { name: "Company", href: "/company" },
  ];

  // Event handlers
  const handleDropdownToggle = (itemName: string) => {
    if (navigationItems.find(item => item.name === itemName)?.hasDropdown) {
      setActiveDropdown(activeDropdown === itemName ? null : itemName);
    }
  };

  const handleDropdownOpen = (itemName: string) => {
    const item = navigationItems.find(item => item.name === itemName);
    if (item?.hasDropdown) {
      setActiveDropdown(itemName);
    }
  };

  const handleDropdownClose = () => {
    setTimeout(() => setActiveDropdown(null), 200);
  };

  const handleModalOpen = () => {
    setIsModalOpen(true);
  };

  const handleMobileMenuToggle = () => {
    setIsMobileMenuOpen(!isMobileMenuOpen);
  };

  return (
    <>
      <header
        className={`fixed top-0 left-0 right-0 z-[9999] transition-all duration-300 ${
          isScrolled
            ? "bg-white/90 backdrop-blur-md border-b border-gray-200 shadow-sm"
            : "bg-white/80 backdrop-blur-sm"
        }`}
      >
        <div className="max-w-7xl mx-auto px-6 lg:px-8">
          <div className="flex h-16 lg:h-20 items-center justify-between">
            {/* Logo */}
            <Logo light={false} customWidth={120} customHeight={50} />

            {/* Desktop Navigation */}
            <nav className="hidden lg:flex items-center space-x-2">
              {navigationItems.map((item) => (
                <div key={item.name} className="relative group">
                  <button
                    className={`flex items-center space-x-1 px-3 py-2 rounded-md text-sm font-medium transition-colors ${
                      activeDropdown === item.name
                        ? "text-gray-900"
                        : "text-gray-700 hover:text-gray-900"
                    }`}
                    onClick={() => handleDropdownToggle(item.name)}
                    onMouseEnter={() => handleDropdownOpen(item.name)}
                    onMouseLeave={handleDropdownClose}
                  >
                    <span>{item.name}</span>
                    {item.hasDropdown && (
                      <ChevronDown
                        className={`w-4 h-4 transition-transform ${
                          activeDropdown === item.name ? "rotate-180" : ""
                        }`}
                      />
                    )}
                  </button>

                  {/* Mega Menu */}
                  {item.hasDropdown && activeDropdown === item.name && (
                    <div
                      className="fixed top-20 left-0 right-0 w-full bg-white border-t border-gray-200 shadow-xl z-[9999]"
                      onMouseEnter={() => setActiveDropdown(item.name)}
                      onMouseLeave={handleDropdownClose}
                    >
                      <div className="max-w-7xl mx-auto px-8 py-10">
                        {/* Header Section */}
                        <div className="mb-8">
                          <h2 className="text-2xl font-bold text-gray-900 mb-2">{item.name}</h2>
                          <p className="text-gray-600">Discover our comprehensive solutions</p>
                        </div>

                        {/* Content Grid - Items + Image */}
                        <div className="grid grid-cols-3 gap-8">
                          {/* Left Column - Menu Items */}
                          <div className="col-span-2">
                            <div className="grid grid-cols-2 gap-6">
                              {item.items?.map((subItem) => (
                                <Link
                                  key={subItem.title}
                                  href={subItem.href}
                                  className="group block p-4 rounded-lg hover:bg-gray-50 transition-all border border-transparent hover:border-gray-200"
                                >
                                  {/* Icon and Title */}
                                  <div className="flex items-start space-x-3 mb-3">
                                    <div className="p-2 bg-gray-100 rounded-md group-hover:bg-blue-50 transition-colors">
                                      <subItem.icon className="w-5 h-5 text-gray-700 group-hover:text-blue-600" />
                                    </div>
                                    <div>
                                      <h3 className="text-base font-semibold text-gray-900 group-hover:text-blue-600 transition-colors">
                                        {subItem.title}
                                      </h3>
                                      <p className="text-sm text-gray-600 mt-1">
                                        {subItem.description}
                                      </p>
                                    </div>
                                  </div>

                                  {/* Features List */}
                                  <ul className="text-xs text-gray-600 space-y-1">
                                    {subItem.features.map((feature) => (
                                      <li key={feature} className="flex items-center">
                                        <span className="mr-2 text-blue-500">â€¢</span>
                                        {feature}
                                      </li>
                                    ))}
                                  </ul>

                                  {/* Learn More Link */}
                                  <div className="mt-3 flex items-center text-sm font-medium text-blue-600 group-hover:text-blue-700 transition-colors">
                                    Learn more
                                    <ArrowRight className="w-3 h-3 ml-1 group-hover:translate-x-1 transition-transform" />
                                  </div>
                                </Link>
                              ))}
                            </div>
                          </div>

                          {/* Right Column - Featured Image */}
                          <div className="col-span-1">
                            <div className="bg-gradient-to-br from-blue-50 to-indigo-100 rounded-xl p-6 h-full flex flex-col justify-center">
                              <div className="text-center">
                                <div className="w-16 h-16 bg-blue-600 rounded-full flex items-center justify-center mx-auto mb-4">
                                  <div className="w-8 h-8 text-white font-bold text-xl">
                                    {item.name.charAt(0)}
                                  </div>
                                </div>
                                <h3 className="text-lg font-semibold text-gray-900 mb-2">
                                  {item.name} Solutions
                                </h3>
                                <p className="text-sm text-gray-600 mb-4">
                                  Transform your business with our cutting-edge {item.name.toLowerCase()} services
                                </p>
                                <button
                                  onClick={handleModalOpen}
                                  className="w-full px-4 py-2 bg-blue-600 text-white text-sm font-medium rounded-md hover:bg-blue-700 transition-colors"
                                >
                                  Get Started
                                </button>
                              </div>
                            </div>
                          </div>
                        </div>

                        {/* Bottom CTA Section */}
                        <div className="mt-8 pt-6 border-t border-gray-200">
                          <div className="flex justify-between items-center">
                            <div>
                              <p className="text-sm text-gray-600">Need help choosing?</p>
                              <p className="text-base font-medium text-gray-900">Our experts are here to guide you</p>
                            </div>
                            <div className="flex space-x-3">
                              <button className="px-4 py-2 border border-gray-200 text-gray-800 text-sm font-medium rounded-md hover:bg-gray-50 transition-colors">
                                Contact Sales
                              </button>
                              <button className="px-4 py-2 bg-black text-white text-sm font-medium rounded-md hover:bg-gray-800 transition-colors">
                                Schedule Demo
                              </button>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  )}
                </div>
              ))}
            </nav>

            {/* Right Side Actions */}
            <div className="flex items-center space-x-4">
              {/* Language Selector */}
              <button className="hidden lg:flex items-center space-x-2 text-sm text-gray-700 hover:text-gray-900">
                <Globe className="w-4 h-4" />
                <span>EN</span>
              </button>

              {/* CTA Buttons */}
              <button
                onClick={handleModalOpen}
                className="hidden lg:inline-flex px-4 py-2 text-sm font-medium bg-black text-white rounded-md hover:bg-gray-800 transition"
              >
                Get Started
              </button>
              <button className="hidden lg:inline-flex px-4 py-2 text-sm font-medium border border-gray-200 rounded-md hover:bg-gray-50 transition">
                Contact Sales
              </button>

              {/* Mobile Menu Button */}
              <button
                onClick={handleMobileMenuToggle}
                className="lg:hidden p-2 rounded-md text-gray-700 hover:bg-gray-900/10"
              >
                {isMobileMenuOpen ? (
                  <X className="w-6 h-6" />
                ) : (
                  <Menu className="w-6 h-6" />
                )}
              </button>
            </div>
          </div>
        </div>
      </header>

      {/* Get Started Modal */}
      <GetStartedModal
        isOpen={isModalOpen}
        onClose={() => setIsModalOpen(false)}
      />
    </>
  );
};

export default MuxxusHeader;
